services:
  # Relay
  relay:
    build:
      context: .
      dockerfile: docker/dockerfile
    env_file:
      - .env
    # Uncomment the following line to run the relay in development mode
    entrypoint: ["tail", "-f", "/dev/null"]
    volumes:
      - ./:/src
      - uploads:/uploads
    ports:
      - ${RELAY_PORT:-8000}:8000
    depends_on:
      relay_db:
        condition: service_healthy
      cache:
        condition: service_healthy

  # Relay PostgreSQL
  relay_db:
    image: postgres:latest
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DATABASE__USER:-relay_user}
      POSTGRES_PASSWORD: ${DATABASE__PASSWORD:-relay_super_secret_password}
      POSTGRES_DB: ${DATABASE__DB:-relay_db}
    ports:
      - ${DATABASE__PORT:-5420}:5432
    volumes:
      - relay_db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DATABASE__USER:-relay_user}", "-d", "${DATABASE__DB:-relay_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Dragonfly cache
  cache:
    image: docker.dragonflydb.io/dragonflydb/dragonfly
    restart: always
    ulimits:
      memlock: -1
    ports:
      - ${CACHE_PORT:-6379}:6379
    volumes:
      - cache_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Insight
  redis_insight:
    image: redislabs/redisinsight:latest
    ports:
      - ${REDIS_INSIGHT_PORT:-5540}:5540
    volumes:
      - redis_insight_db:/db
    restart: always
    depends_on:
      cache:
        condition: service_healthy

volumes:
  relay_db:
  cache_data:
  redis_insight_db:
  uploads:
